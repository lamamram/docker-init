---
## si l'image n'existe pas en local => alors docker compose essaie de télécharger depuis le registre privé OU public
## sinon si la section build existe => alors docker compose essaie de construire l'image
## sauf si on ajoute l'option --build

networks:
  stack-java:
    name: stack-java
    driver: bridge
    ipam:
      config:
        - subnet: 172.19.0.0/24
          gateway: 172.19.0.1

services:
  tomcat:
    container_name: stack-java-tomcat
    image: docker.lan:443/stack-java-tomcat:1.0
    build:
      context: ./tomcat
      args:
        # on peut utiliser une variable du host (export TOMCAT_VERSION_MAJOR=9 )
        - TOMCAT_VERSION_MAJOR=${TOMCAT_VERSION_MAJOR:-9}
        - TOMCAT_VERSION_FULL=${TOMCAT_VERSION_FULL:-9.0.98}
    restart: unless-stopped
    networks:
      - stack-java
    # labels:
    #   - com.host.description=label
    # healthcheck:
    #   test: ["executable", "arg"]
    #   interval: 1m30s
    #   timeout: 30s
    #   retries: 5
    #   start_period: 30s
  httpd:
    container_name: stack-java-httpd
    image: docker.lan:443/stack-java-httpd:1.0
    build:
      # context distant
      # context: https://github.com/lamamram/docker-init.git#main:stack-java/httpd
      # ou en cli docker build -t stack-java-httpd:1.0 https://github.com/lamamram/docker-init.git#main:stack-java/httpd
      context: ./httpd
      # no_cache: true
    restart: unless-stopped
    networks:
      - stack-java
    ports:
      - 8081:80
    depends_on:
      - tomcat
